// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Recurrence {
  daily
  weekly
  monthly
}

model ApiKey {
  id          String     @id @default(cuid())
  token       String     @unique
  companyName String
  recurrence  Recurrence @default(daily)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  founders    Founder[]

  @@map("api_keys")
}

model Founder {
  id          String      @id @default(cuid())
  name        String
  email       String      @unique
  apiKeyId    String
  apiKey      ApiKey      @relation(fields: [apiKeyId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  moodEntries MoodEntry[]

  @@map("founders")
}

model MoodEntry {
  id            String    @id @default(cuid())
  founderId     String
  founder       Founder   @relation(fields: [founderId], references: [id], onDelete: Cascade)
  moodYesterday Int?      // 0-5: How was yesterday
  moodToday     Int?      // 0-5: How do you feel about today
  emailSentAt   DateTime
  respondedAt   DateTime?
  rawResponse   String?   // Store the raw email response
  createdAt     DateTime  @default(now())

  @@map("mood_entries")
}
